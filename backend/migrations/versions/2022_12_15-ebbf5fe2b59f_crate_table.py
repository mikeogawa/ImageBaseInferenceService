"""crate table

Revision ID: ebbf5fe2b59f
Revises: 
Create Date: 2022-12-15 05:32:20.398267

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'ebbf5fe2b59f'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('clinic',
                    sa.Column('id', postgresql.UUID(), nullable=False),
                    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
                    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
                    sa.Column('deleted_at', sa.Boolean(), nullable=True),
                    sa.Column('name', sa.String(), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_clinic_id'), 'clinic', ['id'], unique=False)
    op.create_table('patient',
                    sa.Column('id', postgresql.UUID(), nullable=False),
                    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
                    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
                    sa.Column('deleted_at', sa.Boolean(), nullable=True),
                    sa.Column('sub_id', sa.String(), nullable=True),
                    sa.Column('first_name', sa.String(), nullable=True),
                    sa.Column('last_name', sa.String(), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_patient_id'), 'patient', ['id'], unique=False)
    op.create_table('doctor',
                    sa.Column('id', postgresql.UUID(), nullable=False),
                    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
                    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
                    sa.Column('deleted_at', sa.Boolean(), nullable=True),
                    sa.Column('clinic_id', postgresql.UUID(), nullable=True),
                    sa.Column('sub_id', sa.String(), nullable=True),
                    sa.ForeignKeyConstraint(['clinic_id'], ['clinic.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_doctor_id'), 'doctor', ['id'], unique=False)
    op.create_table('cartel',
                    sa.Column('id', postgresql.UUID(), nullable=False),
                    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
                    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
                    sa.Column('deleted_at', sa.Boolean(), nullable=True),
                    sa.Column('clinic_id', postgresql.UUID(), nullable=True),
                    sa.Column('date', sa.DateTime(), nullable=True),
                    sa.Column('symptom', sa.String(), nullable=True),
                    sa.Column('paint_point', sa.String(), nullable=True),
                    sa.Column('tempreture', sa.Float(), nullable=True),
                    sa.Column('pain_start', sa.DateTime(), nullable=True),
                    sa.Column('pain_end', sa.DateTime(), nullable=True),
                    sa.Column('prior_prescription', sa.String(), nullable=True),
                    sa.Column('allergy', sa.String(), nullable=True),
                    sa.Column('prior_issues', sa.String(), nullable=True),
                    sa.Column('patient_id', postgresql.UUID(), nullable=True),
                    sa.Column('diagnosis', sa.String(), nullable=True),
                    sa.Column('prescription', sa.String(), nullable=True),
                    sa.Column('doctor_id', postgresql.UUID(), nullable=True),
                    sa.ForeignKeyConstraint(['clinic_id'], ['clinic.id'], ),
                    sa.ForeignKeyConstraint(['doctor_id'], ['doctor.id'], ),
                    sa.ForeignKeyConstraint(['patient_id'], ['patient.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_cartel_id'), 'cartel', ['id'], unique=False)
    op.create_table('image',
                    sa.Column('id', postgresql.UUID(), nullable=False),
                    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
                    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
                    sa.Column('deleted_at', sa.Boolean(), nullable=True),
                    sa.Column('s3_url', sa.String(), nullable=True),
                    sa.Column('score', sa.Float(), nullable=True),
                    sa.Column('is_analyzing', sa.Boolean(), nullable=True),
                    sa.Column('cartel_id', postgresql.UUID(), nullable=True),
                    sa.ForeignKeyConstraint(['cartel_id'], ['cartel.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_image_id'), 'image', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_image_id'), table_name='image')
    op.drop_table('image')
    op.drop_index(op.f('ix_cartel_id'), table_name='cartel')
    op.drop_table('cartel')
    op.drop_index(op.f('ix_doctor_id'), table_name='doctor')
    op.drop_table('doctor')
    op.drop_index(op.f('ix_patient_id'), table_name='patient')
    op.drop_table('patient')
    op.drop_index(op.f('ix_clinic_id'), table_name='clinic')
    op.drop_table('clinic')
    # ### end Alembic commands ###
